#!/usr/bin/env bash

#
# To enable, add to .bashrc:
#
#   if [ -f ~/.bash_custom ]; then . ~/.bash_custom; fi
#

# Aliases
if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases; fi

# Retain bash history
HISTFILESIZE=400000000
HISTSIZE=10000
PROMPT_COMMAND="history -a"
shopt -s histappend

# Git
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true

# Color the prompt differently for a mac, linux host, vm, or docker
# container.

# Mac
if which sw_vers &> /dev/null;
then
  . /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
  . /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh

  PS1_COLOR='36' # Cyan
  PS1_PREFIX=

  # Set the TZ for docker containers accessed via ssh
  export TZ="$(readlink /etc/localtime | sed -e 's,.*/zoneinfo/,,')"

  # Ensure local bin path (not set automatically)
  export PATH=$HOME/bin:$PATH

  # Ensure python binaries are in the path
  export PATH=/Users/maru/Library/Python/3.7/bin:$PATH

# Linux
else
  . /usr/share/git-core/contrib/completion/git-prompt.sh

  USER_ID="$(whoami)"
  # VM / Container
  if [[ "${USER_ID}" == "vagrant" || "${USER_ID}" == "dev" ]]; then
    PS1_COLOR='37' # White
  # Host
  else
    PS1_COLOR='32' # Green
    export VAGRANT_DEFAULT_PROVIDER=libvirt
    # Set the TZ for docker containers accessed via ssh
    export TZ="$(readlink /etc/localtime | sed -e 's,.*/zoneinfo/,,')"
  fi
  PS1_PREFIX='${debian_chroot:+($debian_chroot)}'

  # Ensure python binaries are in the path
  export PATH=~/.local/bin:$PATH

  if which keychain &> /dev/null;
  then
    eval `keychain --eval --agents ssh id_rsa`
  fi
fi

# Compose prompt
PS1_BASE='\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[01;35m\]$'
PS1_GIT='(__git_ps1 "|%s|")\[\033[00m\]\$ '
PS1=${PS1_PREFIX}'\[\033[01;'${PS1_COLOR}'m\]'${PS1_BASE}${PS1_GIT}

# Ensure cask binaries are in the path
export PATH=~/.cask/bin:$PATH

# Ensure non-packaged golang trumps go installed from packages
export PATH=/usr/local/go/bin:$PATH

eval $(~/bin/gimme 1.16 | grep -v 'go version')

export GOPATH=~/go

export KUBECONFIG=~/.kube/default-kubeconfig

# Ensure go binaries are in the path
export PATH=$GOPATH/bin:$PATH

# Use local tmp when running in a container to allow test execution.
if [ -f /.dockerenv ]; then
  export TMPDIR=~/tmp
  if [ ! -d "${TMPDIR}" ]; then
    mkdir "${TMPDIR}"
  fi
fi

if [[ -f "~/.bash_aliases" ]]; then
  . "~/.bash_aliases"
fi

function copr() {
  local pr=${1:-}
  local branch=${2:-}
  local remote=${3:-origin}

  if [[ -z "${pr}" ]]; then
    >&2 echo "Please provide a PR id."
    return
  fi
  if [[ -z "${branch}" ]]; then
    branch="pr/${pr}"
  fi
  git fetch "${remote}" "pull/${pr}/head:${branch}" && git co "${branch}"
}

export XAUTHORITY=~/.Xauthority

export AWS_PROFILE=openshift-dev

if [[ $TERMCAP =~ screen ]]; then
  # Emacs doesn't play nice with TERM=screen
  export TERM=xterm-256color
fi

export LOKI_ADDR=http://localhost:3100
